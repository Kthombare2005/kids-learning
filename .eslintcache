[{"E:\\Target_2021\\project-kides\\src\\pages\\games\\game1\\game1.jsx":"1","E:\\Target_2021\\project-kides\\src\\pages\\games\\game1\\timer\\Timer.js":"2"},{"size":6794,"mtime":1636193163793,"results":"3","hashOfConfig":"4"},{"size":1232,"mtime":1636183853897,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"190wjy4",{"filePath":"9","messages":"10","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"E:\\Target_2021\\project-kides\\src\\pages\\games\\game1\\game1.jsx",["12"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport Timer from \"./timer/Timer\";\r\n\r\nimport \"./game1.css\";\r\nimport { Row, Col,Card,Button } from \"react-bootstrap\";\r\n//import { Button } from \"@material-ui/core\";\r\n\r\nconst Game1 = () => {\r\n\r\n  const  [question,setQuestion] = useState();\r\n  const  [answer,setAnswer] = useState();\r\n  const  [option1,setOption1] = useState();\r\n  const  [option2,setOption2] = useState();\r\n  const  [option3,setOption3] = useState();\r\n  const  [option4,setOption4] = useState();\r\n\r\n  const  [variantOp1, setVariantOp1] = useState('outline-primary');\r\n  const  [variantOp2, setVariantOp2] = useState('outline-primary');\r\n  const  [variantOp3, setVariantOp3] = useState('outline-primary');\r\n  const  [variantOp4, setVariantOp4] = useState('outline-primary');\r\n    \r\n  const  [nextButtonEnable, setNextButtonEnable] = useState(false);\r\n  const  [ButtonEnable, setButtonEnable] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        createQuestion();\r\n    },[])\r\n\r\n   \r\n    const createQuestion = () =>{\r\n        let op1= Math.floor(Math.random() * 10+10);\r\n        let op2 = Math.floor(Math.random() * 10+8);\r\n        \r\n\r\n        const d = new Date();\r\n        let seconds = d.getSeconds();\r\n\r\n        if(seconds < 10){\r\n            let ar = '*';\r\n            setQuestion(op1+' '+ ar +' '+op2);\r\n            const ans = op1*op2;\r\n            setAnswer(ans);\r\n            setOption1(ans);        \r\n            setOption2(ans-3);        \r\n            setOption3(ans + 2);        \r\n            setOption4(ans+5);\r\n        }else if( 10 > seconds && seconds < 20){\r\n            let ar = '+';\r\n            setQuestion(op1+' '+ ar +' '+op2);\r\n            const ans = op1+op2;\r\n            setAnswer(ans);\r\n            setOption1(ans);        \r\n            setOption2(ans+5);        \r\n            setOption3(ans + 2);        \r\n            setOption4(ans+7);\r\n        }else if( 21 > seconds && seconds < 30){\r\n            let ar = '-';\r\n            setQuestion(op1+' '+ ar +' '+op2);\r\n            const ans = op1-op2;\r\n            setAnswer(ans);\r\n            setOption1(ans+8);        \r\n            setOption2(ans+5);        \r\n            setOption3(ans + 2);        \r\n            setOption4(ans);\r\n        }else if( 31 > seconds && seconds < 40){\r\n            let ar = '/';\r\n            setQuestion(op1+' '+ ar +' '+op2);\r\n            const ans = op1/op2;\r\n            setAnswer(ans);\r\n            setOption1(ans);        \r\n            setOption2(ans+5);        \r\n            setOption3(ans + 2);        \r\n            setOption4(ans+3);\r\n        }else if( 40 > seconds && seconds < 50){\r\n            let ar = '-';\r\n            setQuestion(op1+' '+ ar +' '+op2);\r\n            const ans = op1-op2;\r\n            setAnswer(ans);\r\n            setOption1(ans-4);        \r\n            setOption2(ans);        \r\n            setOption3(ans + 2);        \r\n            setOption4(ans+6);\r\n        }\r\n        else if( 50 > seconds && seconds < 55){\r\n            let ar = '*';\r\n            setQuestion(op1+' '+ ar +' '+op2);\r\n            const ans = op1*op2;\r\n            setAnswer(ans);\r\n            setOption1(ans-4);        \r\n            setOption2(ans+5);        \r\n            setOption3(ans + 2);        \r\n            setOption4(ans);\r\n        }\r\n        else {\r\n            let ar = '+';\r\n            setQuestion(op1+' '+ ar +' '+op2);\r\n            const ans = op1+op2;\r\n            setAnswer(ans);\r\n            setOption1(ans+7);        \r\n            setOption2(ans);        \r\n            setOption3(ans+5);        \r\n            setOption4(ans+3);\r\n        }\r\n\r\n\r\n        setNextButtonEnable(false); \r\n        setButtonEnable(false);\r\n\r\n        setVariantOp1('outline-primary');\r\n        setVariantOp2('outline-primary');\r\n        setVariantOp3('outline-primary');\r\n        setVariantOp4('outline-primary');\r\n      \r\n    }\r\n\r\n    const checkAnswer = (ans,option)=>{\r\n       \r\n            if(option === 'option1'){\r\n                if(ans === answer){\r\n                    setVariantOp1('outline-success');\r\n                }else{\r\n                    setVariantOp1('outline-danger');\r\n                }\r\n            }else  if(option === 'option2'){\r\n                \r\n                    if(ans === answer){\r\n                     setVariantOp2('outline-success');\r\n                    }else{\r\n                        setVariantOp2('outline-danger');\r\n                    }\r\n            }else  if(option === 'option3'){\r\n                \r\n                    if(ans === answer){\r\n                    setVariantOp3('outline-success');\r\n                    }else{\r\n                        setVariantOp3('outline-danger');\r\n                    }\r\n            }else  if(option === 'option4'){\r\n                \r\n                    if(ans === answer){\r\n                    setVariantOp4('outline-success');\r\n                    }else{\r\n                        setVariantOp4('outline-danger');\r\n                    }\r\n            }\r\n        \r\n        setButtonEnable(true);\r\n        setNextButtonEnable(true);\r\n    }\r\n  \r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col className=\"sm-col-4 sm-hide\">\r\n          <h1>Game 1 Lets Start</h1>\r\n    \r\n        </Col>\r\n        <Col className=\"sm-col-4\">\r\n            <Timer/>      \r\n        </Col>\r\n      </Row>\r\n      <div className=\"justify-content-md-left p-md-5 p-lg-5 p-sm-2\">      \r\n      <div className=\"jumbotron\">\r\n        <div className=\" mb-2\">Q. {question} = _________ </div>\r\n        <Row>\r\n          <Col xs={12} md={6} className=\"p-2\">\r\n          A) <Button disabled={ButtonEnable} variant={variantOp1} onClick={()=>checkAnswer(option1,'option1')}>\r\n          {option1}\r\n          </Button>\r\n          {/* <Button className=\" bg-green\"> a) {option1} </Button> */}\r\n          </Col>\r\n          <Col xs={12} md={6} className=\"p-2 \">\r\n           B) <Button disabled={ButtonEnable} variant={variantOp2} onClick={()=>checkAnswer(option2,'option2')}>\r\n            {option2}   \r\n            </Button>\r\n          </Col>\r\n          <Col xs={12} md={6} className=\"p-2\">\r\n          C) <Button className=\"bold\" disabled={ButtonEnable} variant={variantOp3} onClick={()=>checkAnswer(option3, 'option3')}>\r\n            {option3}   \r\n            </Button>\r\n          </Col>\r\n          <Col xs={12} md={6} className=\"p-2 \">\r\n          D) <Button className=\"bold\" variant={variantOp4} disabled={ButtonEnable} onClick={()=>checkAnswer(option4,'option4')}>\r\n            {option4}   \r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n       <div style={{marginLeft:'40px'}}>\r\n       { nextButtonEnable ? (\r\n        <Button variant=\"warning\" onClick={()=>createQuestion()}>\r\n            Next\r\n            </Button>) : null\r\n            }        \r\n        </div> \r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game1;\r\n","E:\\Target_2021\\project-kides\\src\\pages\\games\\game1\\timer\\Timer.js",["13"],"import React from \"react\";\r\nimport { useHistory} from 'react-router-dom';\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\n\r\nimport \"./Timer.css\";\r\n\r\nconst Timer = () =>{\r\n  \r\n    const history = useHistory();\r\n\r\n    const renderTime = ({ remainingTime }) => {\r\n        const minutes = Math.floor(remainingTime / 60)\r\n        const seconds = remainingTime % 60\r\n        if (remainingTime === 0) {\r\n           // history.push('/game');\r\n          return <div className=\"timer\">Too late...</div>;\r\n        }\r\n      \r\n        return (\r\n          <div className=\"timer\">\r\n            <div className=\"text\">Remaining</div>\r\n            <div className=\"value\">{minutes}:{seconds}</div>\r\n            <div className=\"text\">seconds</div>\r\n          </div>\r\n        );\r\n      };\r\n\r\n    return (\r\n    <div className=\"App\">\r\n     \r\n      <div className=\"timer-wrapper\" style={{height:'200px'}}>\r\n        <CountdownCircleTimer\r\n          isPlaying\r\n          duration={6}\r\n          colors={[[\"#004777\", 0.33], [\"#F7B801\", 0.33], [\"#A30000\"]]}\r\n          //onComplete={() => [true, 1000]}\r\n        >\r\n          {renderTime}\r\n        </CountdownCircleTimer>\r\n      </div>\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;",{"ruleId":"14","severity":1,"message":"15","line":6,"column":19,"nodeType":"16","messageId":"17","endLine":6,"endColumn":23},{"ruleId":"14","severity":1,"message":"18","line":9,"column":11,"nodeType":"16","messageId":"17","endLine":9,"endColumn":18},"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used."]